/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.onlinecabbookingmanagementsystem;



import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class RideConfirm extends javax.swing.JFrame {

    /**
     * Creates new form RideConfirm
     */
    public RideConfirm() {
        initComponents();
         java.net.URL imgURL = getClass().getResource("C:\\Users\\hp\\OneDrive\\Documents\\NetBeansProjects\\OnlineCabBookingManagementSystem\\src\\rconfirm-removebg-preview.png");
        if (imgURL != null) {
            ImageIcon icon = new ImageIcon(imgURL);
            jLabel12.setIcon(icon);
        } else {
            System.err.println("Couldn't find file:C:C:\\Users\\hp\\OneDrive\\Documents\\NetBeansProjects\\OnlineCabBookingManagementSystem\\src\\rconfirm-removebg-preview.png");
        }
    }
    
    private class DriverData {
    String driverId;
    String driverName;

    DriverData(String driverId, String driverName) {
        this.driverId = driverId;
        this.driverName = driverName;
    }
}

    
       public void displayData() {
        if (customerDataList.isEmpty()) {
            return;
        }
        CustomerData currentData = customerDataList.get(currentIndex);
        txtcname.setText(currentData.cname);
        txtemailid.setText(currentData.emailid);
        txtpstate.setText(currentData.pstate);
        txtpcity.setText(currentData.pcity);
        txtdstate.setText(currentData.dstate);
        txtdcity.setText(currentData.dcity);
        txtcabtype.setText(currentData.cabtype);
        txtdriver.setText(currentData.driverId);  // Display Driver ID
    txtdname.setText(currentData.driverName);
        
        
    }

    // Method to clear the fields

    
private List<CustomerData> customerDataList = new ArrayList<>();
private int currentIndex = 0;

   
private class CustomerData {
    String cname, emailid, pstate, pcity, dstate, dcity, cabtype, driverId, driverName;

    CustomerData(String cname, String emailid, String pstate, String pcity,
                 String dstate, String dcity, String cabtype, String driverId, String driverName) {
        this.cname = cname;
        this.emailid = emailid;
        this.pstate = pstate;
        this.pcity = pcity;
        this.dstate = dstate;
        this.dcity = dcity;
        this.cabtype = cabtype;
        this.driverId = driverId;
        this.driverName = driverName;
    }
}

 int id=0;
int getId()
{
    ResultSet rs=null;
    try
    {
    Class.forName("com.mysql.cj.jdbc.Driver");
String url ="jdbc:mysql://localhost:3306/onlinecbmsystemdatabase?zeroDateTimeBehavior=CONVERT_TO_NULL ";
Connection con=DriverManager.getConnection(url, "root","7217296337@abhi");

String sql="select max(id) from orderhistoy";
Statement st=con.createStatement();
rs=st.executeQuery(sql);

while(rs.next())
{
    id=rs.getInt(1);
id++;
}

    }
    catch(Exception e)
    {
    e.printStackTrace();
    }

return id;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtcname = new javax.swing.JTextField();
        txtemailid = new javax.swing.JTextField();
        txtpstate = new javax.swing.JTextField();
        txtpcity = new javax.swing.JTextField();
        txtdstate = new javax.swing.JTextField();
        txtdcity = new javax.swing.JTextField();
        combozone = new javax.swing.JComboBox<>();
        txtdriver = new javax.swing.JTextField();
        txtdname = new javax.swing.JTextField();
        btnok = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        btnhome = new javax.swing.JButton();
        txtcabtype = new javax.swing.JTextField();
        btnnext = new javax.swing.JButton();
        btnprevious = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("Ride Confirm");

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\hp\\OneDrive\\Documents\\NetBeansProjects\\OnlineCabBookingManagementSystem\\src\\rconfirm-removebg-preview.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1))
        );

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Customer_Name");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 56, 149, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Email_Id");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 56, 149, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Pickup_State");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 123, 149, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Pickup_City");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 123, 149, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Drop_State");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 190, 149, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Drop_City");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 190, 149, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Zone");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 257, 149, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Driver_Id");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 257, 149, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Driver_Name");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 324, 149, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Cab_Type");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 324, 140, -1));

        txtcname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtcname, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 57, 127, -1));

        txtemailid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtemailid, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 57, 127, -1));

        txtpstate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtpstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 124, 127, -1));

        txtpcity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtpcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 124, 127, -1));

        txtdstate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtdstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 191, 127, -1));

        txtdcity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtdcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 191, 127, -1));

        combozone.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        combozone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eastern", "Western", "Northern", "Southern", "Central" }));
        combozone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combozoneActionPerformed(evt);
            }
        });
        jPanel2.add(combozone, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 258, 127, -1));

        txtdriver.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtdriver, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 258, 127, -1));

        txtdname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtdname, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 325, 127, -1));

        btnok.setBackground(new java.awt.Color(255, 51, 51));
        btnok.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnok.setText("Ok");
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });
        jPanel2.add(btnok, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        btnclear.setBackground(new java.awt.Color(255, 51, 51));
        btnclear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel2.add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 400, -1, -1));

        btnhome.setBackground(new java.awt.Color(255, 51, 51));
        btnhome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnhome.setText("Home");
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });
        jPanel2.add(btnhome, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 400, -1, -1));

        txtcabtype.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel2.add(txtcabtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 325, 127, -1));

        btnnext.setBackground(new java.awt.Color(255, 51, 51));
        btnnext.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnnext.setText("Next");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });
        jPanel2.add(btnnext, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, -1, -1));

        btnprevious.setBackground(new java.awt.Color(255, 51, 51));
        btnprevious.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnprevious.setText("Previous");
        btnprevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreviousActionPerformed(evt);
            }
        });
        jPanel2.add(btnprevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 943, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combozoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combozoneActionPerformed
   fetchDataFromDatabase();   
       // Reset to default or empty selection
// TODO add your handling code here:
    }//GEN-LAST:event_combozoneActionPerformed

    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
if(Validation()==true)
{
        insertData();
}
else
{
JOptionPane.showMessageDialog(this, "validation issue");
}int a = JOptionPane.showConfirmDialog(this, "Do you want to confirm the ride?", "Confirm", JOptionPane.YES_NO_CANCEL_OPTION);

        switch (a) {
            case JOptionPane.NO_OPTION -> {
                // "No" par click karne ke baad ye message dikhayega
                JOptionPane.showMessageDialog(this, "The ride has not been confirmed.");
                // Iske baad code execution yahin ruk jayegi aur form wapas dikhega
                return;
            }
            case JOptionPane.CANCEL_OPTION -> {
                // "Cancel" par click karne par cancellation message dikhayega
                JOptionPane.showMessageDialog(this, "The operation has been canceled.");
                // Code execution yahin ruk jayegi aur form wapas dikhega
                return;
            }
            case JOptionPane.YES_OPTION -> {
                // Yahan se YES_OPTION select hone ke baad hi agla code chalega
                if (txtcname.getText().isEmpty() || txtemailid.getText().isEmpty() ||
                        txtpstate.getText().isEmpty() || txtpcity.getText().isEmpty() ||
                        txtdstate.getText().isEmpty() || txtdcity.getText().isEmpty() ||
                        txtdriver.getText().isEmpty() || txtdname.getText().isEmpty()) {
                    
                    // Show error message if any field is empty
                    JOptionPane.showMessageDialog(this, "Please fill in all fields!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    // Ride confirm hone ka message aur Thanks form dikhayega
                    JOptionPane.showMessageDialog(this, "Your ride has been confirmed!", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
                    
                    // Fetch customer name
                    String customerName = txtcname.getText();
                    
                    // Open the Thanks Form and pass customer name
                    Thanks t = new Thanks(customerName); // Pass the customer name to the Thanks form
                    t.setVisible(true);
                    this.dispose();  // Close the current form
                    
                     txtdriver.setText("");
                txtdname.setText("");
                }
            }
            default -> {
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnokActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
 
    txtcname.setText("");
    txtemailid.setText("");
    txtpstate.setText("");
    txtpcity.setText("");
    txtdstate.setText("");
    txtdcity.setText("");
    txtdriver.setText("");
    txtdname.setText("");
    combozone.setSelectedIndex(0);
    txtcabtype.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
       Home h1 = new Home ();
       h1.show();
this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_btnhomeActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        if (currentIndex < customerDataList.size() - 1) {
        currentIndex++;
        displayData();
    } else {
        JOptionPane.showMessageDialog(this, "This is the last record.");
    }  // TODO add your handling code here:
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnpreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreviousActionPerformed
      if (currentIndex > 0) {
        currentIndex--;
        displayData();
    } else {
        JOptionPane.showMessageDialog(this, "This is the first record.");
    }  // TODO add your handling code here:
    }//GEN-LAST:event_btnpreviousActionPerformed
private void fetchDataFromDatabase() {
    String url = "jdbc:mysql://localhost:3306/onlinecbmsystemdatabase?zeroDateTimeBehavior=CONVERT_TO_NULL";
    String user = "root";
    String password = "7217296337@abhi";

    String sqlCustomer = "SELECT * FROM customer WHERE Zone = ?";
    String sqlDriver = "SELECT * FROM driverselection WHERE Zone = ? AND Cab_Type = ?";

    try (Connection con = DriverManager.getConnection(url, user, password);
         PreparedStatement pstmtCustomer = con.prepareStatement(sqlCustomer);
         PreparedStatement pstmtDriver = con.prepareStatement(sqlDriver)) {

        String selectedZone = combozone.getSelectedItem().toString();
        pstmtCustomer.setString(1, selectedZone);

        try (ResultSet rsCustomer = pstmtCustomer.executeQuery()) {
            customerDataList.clear();
            currentIndex = 0;

            while (rsCustomer.next()) {
                pstmtDriver.setString(1, selectedZone);
                pstmtDriver.setString(2, rsCustomer.getString("Cab_Type"));

                String DriverId = "";
                String UserName = "";

                try (ResultSet rsDriver = pstmtDriver.executeQuery()) {
                    if (rsDriver.next()) {
                        DriverId = rsDriver.getString("Driver_Id");
                        UserName = rsDriver.getString("Username");
                    }
                }

                customerDataList.add(new CustomerData(
                    rsCustomer.getString("customer_name"),
                    rsCustomer.getString("email_id"),
                    rsCustomer.getString("pickup_state"),
                    rsCustomer.getString("pickup_city"),
                    rsCustomer.getString("drop_state"),
                    rsCustomer.getString("drop_city"),
                    rsCustomer.getString("Cab_Type"),
                    DriverId,
                    UserName
                ));
            }

            if (customerDataList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No customers found for the selected zone!");
            } else {
                displayData();  // Display customer data only
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error fetching data from the database: " + e.getMessage());
        e.printStackTrace();
    }
}

String Customer_Name,Email_Id,Pickup_State,Pickup_City,Drop_State,Drop_City,Zone,Driver_Id,Driver_Name,Cab_Type;
   void insertData() {
    try {
       // Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/onlinecbmsystemdatabase?zeroDateTimeBehavior=CONVERT_TO_NULL";
        Connection con = DriverManager.getConnection(url, "root", "7217296337@abhi");
        con.setAutoCommit(false); // disable auto-commit

        String customerName = txtcname.getText();
        String emailId = txtemailid.getText();
        String pickupState = txtpstate.getText();
        String pickupCity = txtpcity.getText();
        String dropState = txtdstate.getText();
        String dropCity = txtdcity.getText();
        String zone = combozone.getSelectedItem().toString();
        String driverId = txtdriver.getText();
        String driverName = txtdname.getText();
        String cabType = txtcabtype.getText();

        String sql = "INSERT INTO orderhistoy(id, Customer_Name, Email_id, Pickup_State, Pickup_City, Drop_State, Drop_City, Zone, Driver_Id, Driver_Name, Cab_Type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        System.out.println("SQL Query: " + sql); // Print the SQL query

        PreparedStatement st = con.prepareStatement(sql);

        st.setInt(1, getId());
        st.setString(2, customerName);
        st.setString(3, emailId);
        st.setString(4, pickupState);
        st.setString(5, pickupCity);
        st.setString(6, dropState);
        st.setString(7, dropCity);
        st.setString(8, zone);
        st.setString(9, driverId);
        st.setString(10, driverName);
        st.setString(11, cabType);

        st.executeUpdate();
        con.commit(); // commit the changes
        JOptionPane.showMessageDialog(this, "Data inserted successfully");
    } catch (SQLException e) {
        System.err.println("Error inserting data: " + e.getMessage());
        e.printStackTrace();
    }
}

 boolean Validation()
 {
     
      String customerName = txtcname.getText();
    String emailId = txtemailid.getText();
    String pickupState = txtpstate.getText();
    String pickupCity = txtpcity.getText();
    String dropState = txtdstate.getText();
    String dropCity = txtdcity.getText();
    String zone = combozone.getSelectedItem().toString();
    String driverId = txtdriver.getText();
    String driverName = txtdname.getText();
    String cabType = txtcabtype.getText();
 return true;
 }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RideConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RideConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RideConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RideConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RideConfirm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnhome;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnok;
    private javax.swing.JButton btnprevious;
    private javax.swing.JComboBox<String> combozone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtcabtype;
    private javax.swing.JTextField txtcname;
    private javax.swing.JTextField txtdcity;
    private javax.swing.JTextField txtdname;
    private javax.swing.JTextField txtdriver;
    private javax.swing.JTextField txtdstate;
    private javax.swing.JTextField txtemailid;
    private javax.swing.JTextField txtpcity;
    private javax.swing.JTextField txtpstate;
    // End of variables declaration//GEN-END:variables
}
